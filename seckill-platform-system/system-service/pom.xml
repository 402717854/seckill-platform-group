<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.seckill.platform</groupId>
        <artifactId>seckill-platform-system</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>system-service</artifactId>
    <packaging>jar</packaging>

    <name>system-service</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>com.seckill.platform</groupId>
            <artifactId>system-logging</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.seckill.platform</groupId>
            <artifactId>system-generator</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.seckill.platform</groupId>
            <artifactId>system-tools</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.seckill.platform</groupId>
            <artifactId>system-common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- Spring boot websocket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
            <version>2.3.12.RELEASE</version>
        </dependency>

        <!-- quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
        </dependency>


        <!-- linux的管理 -->
        <dependency>
            <groupId>ch.ethz.ganymed</groupId>
            <artifactId>ganymed-ssh2</artifactId>
            <version>build210</version>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.55</version>
        </dependency>
        <!-- 获取系统信息 -->
        <dependency>
            <groupId>com.github.oshi</groupId>
            <artifactId>oshi-core</artifactId>
            <version>6.1.4</version>
        </dependency>
        <dependency>
            <groupId>com.seckill.framework</groupId>
            <artifactId>seckill-platform-starter-redisson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.seckill.framework</groupId>
            <artifactId>seckill-platform-starter-cache-caffeine</artifactId>
        </dependency>
    </dependencies>

    <!--执行命令#构建正式包
                maven package -P prod -Dmaven.test.skip=true-->
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!--默认激活配置,maven打包默认选用的配置-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--当前环境自定义配置,标签名自定义-->
                <profile.name>dev</profile.name>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <profile.name>test</profile.name>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profile.name>prod</profile.name>
            </properties>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <!-- 指定资源文件夹，src/main/resources 默认打到classes下-->
                <directory>src/main/resources</directory>
                <!-- 默认为false，配置为true，则会将改资源目录下的xml和properties文件中的引用 @配置@  和 ${} 转换成真实值-->
                <filtering>true</filtering>
                <!-- 指定要打包的文件或目录（只包含资源源文件，不包括class -->
<!--                <includes>-->
<!--                    <include></include>-->
<!--                </includes>-->
                <!-- 指定要过滤的文件或目录 （只包含资源源文件，不包括class-->
<!--                <excludes>-->
<!--                    <exclude></exclude>-->
<!--                </excludes>-->
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <!--源代码使用的jdk版本-->
                    <source>11</source>
                    <!--需要生成的目标class文件的编译版本-->
                    <target>11</target>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <!--跳过单元测试-->
                    <skip>true</skip>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
            <!--对Maven工程的源码进行打jar包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 生成javadoc文档包的插件 -->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-javadoc-plugin</artifactId>-->
<!--                <version>${maven-javadoc-plugin.version}</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>jar</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>
